#2
#a = [1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 7] 
#print(a)
#b = []
#c = set(a)
#print(c)
#raz = len(a)
#for i in range(raz):
#    if a[i] % 2 == 0:
#        b.append(a[i])
#print(set(b))



#3
#a = [0]
#b = 0
#print(b)
#for i in range(9):
#    b += 1 * 10
#    a.append(b)
#
#print(a)



#1
#a = [1, 2, 3, 4, 5, 6, 7]
#n = [1, 2, 3, 4, 5, 6, 7]
#
#result = {}
#
#for i in range(len(a)):
#    if a[i] % 2 == 1:
#        b = a[i] ** 3
#        result[a[i]] = b
#
#print(result)
#
#        
#
#
#
##n = 3
##print(n**3)





#4
#def divisible_by_seven(n):
#    for i in range(n + 1):
#        if i % 7 == 0:
#            yield i
#
#n = int(input("Введите значение n: "))
#for num in divisible_by_seven(n):
#    print(num)







#5
def generate_combinations(sequence, r):
    if r == 0:
        yield []
    elif len(sequence) < r:
        return
    else:
        for i in range(len(sequence)):
            for cc in generate_combinations(sequence[i + 1:], r - 1):
                yield [sequence[i]] + cc

def generate_permutations(sequence):
    if len(sequence) == 0:
        yield []
    else:
        for i in range(len(sequence)):
            rest = sequence[:i] + sequence[i + 1:]
            for p in generate_permutations(rest):
                yield [sequence[i]] + p

def generate_words(sequence):
    char_count = {}
    for char in sequence:
        if char.isalpha():  
            if char in char_count:
                char_count[char] += 1
            else:
                char_count[char] = 1
    
    words = set()

    for r in range(1, len(sequence) + 1):
        for comb in generate_combinations(sequence, r):
            for perm in generate_permutations(comb):
                word = ''.join(perm)
                valid_word = True
                for char in word:
                    if word.count(char) > char_count.get(char, 0):
                        valid_word = False
                        break
                if valid_word:
                    words.add(word)
    
    sorted_words = sorted(words, key=lambda x: (len(x), x))

    return sorted_words

sequence = input("Введите последовательность символов: ")
words = generate_words(sequence)
print(len(words))
for word in words:
    print(word)
